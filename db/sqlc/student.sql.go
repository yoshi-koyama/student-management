// Code generated by sqlc. DO NOT EDIT.
// source: student.sql

package db

import (
	"context"
)

const createStudent = `-- name: CreateStudent :exec
INSERT INTO students (name, nrc, age, gender, password) VALUES ($1, $2, $3, $4, $5)
`

type CreateStudentParams struct {
	Name     string
	Nrc      string
	Age      int32
	Gender   string
	Password string
}

func (q *Queries) CreateStudent(ctx context.Context, arg CreateStudentParams) error {
	_, err := q.db.ExecContext(ctx, createStudent,
		arg.Name,
		arg.Nrc,
		arg.Age,
		arg.Gender,
		arg.Password,
	)
	return err
}

const listStudents = `-- name: ListStudents :many
SELECT id, name, nrc, age, gender, password FROM students
`

func (q *Queries) ListStudents(ctx context.Context) ([]Student, error) {
	rows, err := q.db.QueryContext(ctx, listStudents)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []Student
	for rows.Next() {
		var i Student
		if err := rows.Scan(
			&i.ID,
			&i.Name,
			&i.Nrc,
			&i.Age,
			&i.Gender,
			&i.Password,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
